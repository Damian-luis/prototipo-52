const axios = require('axios');

// Configurar axios para el frontend
const api = axios.create({
  baseURL: 'http://localhost:3000',
  headers: {
    'Content-Type': 'application/json',
  },
});

async function testProfessionalsAPI() {
  try {
    console.log('üîç Testing professionals API...');
    
    // 1. Probar sin autenticaci√≥n (deber√≠a fallar)
    try {
      const response = await api.get('/users/professionals');
      console.log('‚ùå Should have failed without auth:', response.data);
    } catch (error) {
      console.log('‚úÖ Correctly failed without auth:', error.response?.status, error.response?.data?.message);
    }
    
    // 2. Probar con token inv√°lido
    try {
      const response = await api.get('/users/professionals', {
        headers: { 'Authorization': 'Bearer invalid-token' }
      });
      console.log('‚ùå Should have failed with invalid token:', response.data);
    } catch (error) {
      console.log('‚úÖ Correctly failed with invalid token:', error.response?.status, error.response?.data?.message);
    }
    
    // 3. Probar endpoint de autenticaci√≥n para obtener un token v√°lido
    try {
      const loginResponse = await api.post('/auth/login', {
        email: 'creador2@gmail.com', // Usuario empresa
        password: 'password123'
      });
      
      const token = loginResponse.data.token;
      console.log('üîë Got token:', token ? 'Token received' : 'No token');
      
      if (token) {
        // 4. Probar con token v√°lido
        const professionalsResponse = await api.get('/users/professionals', {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        
        console.log('‚úÖ Professionals API response:', professionalsResponse.status);
        console.log('üìã Professionals data:', professionalsResponse.data);
        console.log('üë• Number of professionals:', Array.isArray(professionalsResponse.data) ? professionalsResponse.data.length : 'Not an array');
      }
      
    } catch (error) {
      console.log('‚ùå Login failed:', error.response?.status, error.response?.data?.message);
    }
    
  } catch (error) {
    console.error('‚ùå Error testing API:', error.message);
  }
}

testProfessionalsAPI(); 